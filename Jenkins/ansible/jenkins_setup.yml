- hosts: jenkins
  become: true
  vars:
    user_admin_password: "{{ lookup('community.general.env', 'USER_ADMIN_PASSWORD') }}"
    user_user_password: "{{ lookup('community.general.env', 'USER_USER_PASSWORD') }}"

  tasks:
    - name: add jenkins key
      apt_key:  # ansible module to add key
        url:  https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        state: present

    - name: add jenkins repo
      apt_repository: #ansible module to add repo
        repo: 'deb https://pkg.jenkins.io/debian-stable binary/'
        state: present

    - name: install java
      apt:
        name: openjdk-17-jre
        state: present

    - name: install jenkins  #install jenkins
      apt:
        name: jenkins
        state: present

    - name: start jenkins service
      service:
        name: jenkins
        state: started

    - name: enable jenkins to start at boot time
      service:
        name: jenkins
        enabled: yes

    - name: Retrieve initial Jenkins admin password
      command: cat /var/lib/jenkins/secrets/initialAdminPassword
      register: jenkins_admin_password

    - name: Download the Plugin Installation Manager Tool for Jenkins
      get_url:
          url: https://github.com/jenkinsci/plugin-installation-manager-tool/releases/download/2.13.2/jenkins-plugin-manager-2.13.2.jar
          dest: /tmp/jenkins-plugin-manager.jar

    - name: Copy a file with the list of plugins to install
      copy:
        src: ../casc/plugins.txt
        dest: /tmp/plugins.txt
        owner: jenkins
        group: jenkins
        mode: '0644'

    - name: Install Jenkins plugins (need to create a custom ansible module for this because when the playbook is re-run, the plugins are reinstalled anyway)
      command: java -jar /tmp/jenkins-plugin-manager.jar --plugin-file /tmp/plugins.txt --war /usr/share/java/jenkins.war --plugin-download-directory /var/lib/jenkins/plugins

    - name: Restart Jenkins to apply plugins
      service:
        name: jenkins
        state: restarted

    - name: Create Jenkins Configuration as Code (JCasC) directory
      file:
        path: /var/jenkins_home/casc_configs/
        state: directory
        owner: jenkins
        group: jenkins
        mode: '0755'

    - name: Upload Jenkins Configuration as Code (JCasC) file
      copy:
        src: ../casc/jenkins-casc.yml
        dest: /var/jenkins_home/casc_configs/jenkins.yaml
        owner: jenkins
        group: jenkins
        mode: '0644'

    - name: Skip Jenkins setup wizard and apply JCasC
      lineinfile:
        dest=/usr/lib/systemd/system/jenkins.service
        regexp='^Environment="JAVA_OPTS=-Djava.awt.headless=true'
        line='Environment="JAVA_OPTS=-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false -Dcasc.jenkins.config=/var/jenkins_home/casc_configs/jenkins.yaml"'
      register: result_skip_startup_wizard

    - name: deamon-reload
      command: systemctl daemon-reload
      when: result_skip_startup_wizard.changed

    - name: Restart Jenkins to apply JCasC
      service:
        name: jenkins
        state: restarted
      when: result_skip_startup_wizard.changed

    - name: Display initial Jenkins admin password
      debug:
        msg: "Initial Jenkins admin password is: {{ jenkins_admin_password.stdout }}"
